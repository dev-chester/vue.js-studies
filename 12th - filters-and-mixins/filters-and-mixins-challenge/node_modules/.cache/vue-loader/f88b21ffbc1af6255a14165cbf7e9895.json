{"remainingRequest":"/home/pixel/Documentos/Desenvolvimento/vue.js/12th - filters-and-mixins/filters-and-mixins-challenge/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pixel/Documentos/Desenvolvimento/vue.js/12th - filters-and-mixins/filters-and-mixins-challenge/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/pixel/Documentos/Desenvolvimento/vue.js/12th - filters-and-mixins/filters-and-mixins-challenge/src/App.vue","mtime":1566934133942},{"path":"/home/pixel/Documentos/Desenvolvimento/vue.js/12th - filters-and-mixins/filters-and-mixins-challenge/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/pixel/Documentos/Desenvolvimento/vue.js/12th - filters-and-mixins/filters-and-mixins-challenge/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/pixel/Documentos/Desenvolvimento/vue.js/12th - filters-and-mixins/filters-and-mixins-challenge/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/pixel/Documentos/Desenvolvimento/vue.js/12th - filters-and-mixins/filters-and-mixins-challenge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pixel/Documentos/Desenvolvimento/vue.js/12th - filters-and-mixins/filters-and-mixins-challenge/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#app {\n\tfont-family: 'Avenir', Helvetica, Arial, sans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\ttext-align: center;\n\tcolor: #2c3e50;\n\tmargin-top: 60px;\n\tfont-size: 2.5rem;\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n\t<div id=\"app\">\n\t\t<h1>Filtros & Mixins (Desafio)</h1>\n\t\t<hr>\n\t\t\n\t\t\n\t\t<!-- Exercício 1 -->\n\t\t<!-- Construir um filtro local que troca espaços por vírgula -->\n\t\t<p>{{frase | espacoPorVirgula}}</p>\n\t\t<!-- Exercício 2 -->\n\t\t<!-- Filtro global que conta o tamanho de cada palavra e adiciona o \n\t\t\tvalor na string final -->\n\t\t<!-- \"Pedro é legal\" => \"Pedro (5) é (1) legal (5)\" -->\n\t\t<div class=\"contadorDeString\">\n\t\t\t<p>{{\"Leandro Viana Martins\" | contadorString}}</p>\n\t\t</div>\n\t\t<!-- Exercício 3 -->\n\t\t<!-- Implementar os exercicios 1 e 2 com propriedade computada -->\n\t\t<p>{{espacoPorVirgulaComputada}}</p>\n\t\t<p>{{contadorStringComputada}}</p>\n\t\t<!-- Exercício 4 -->\n\t\t<!-- Compartilhe a propriedade computada via mixin -->\n\t</div>\n</template>\n\n<script>\nexport default {\n\tdata(){\n\t\treturn{\n\t\t\tfrase: 'Leandro Viana Martins',\n\t\t\tfraseComputada: 'Leandro Viana Martins',\n\t\t}\n\t},\n\tfilters:{\n\t\tespacoPorVirgula(str){\n\t\t\tlet newString = str.replace(/ /g, \", \");\n\t\t\treturn newString\n\t\t}\n\t},\n\tcomputed:{\n\t\tespacoPorVirgulaComputada(){\n\t\t\treturn this.fraseComputada.replace(/ /g, \", \");\n\t\t},\n\t\tcontadorStringComputada(){\n\t\t\t\n\t\t}\n\t}\n}\n</script>\n\n<style>\n#app {\n\tfont-family: 'Avenir', Helvetica, Arial, sans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\ttext-align: center;\n\tcolor: #2c3e50;\n\tmargin-top: 60px;\n\tfont-size: 2.5rem;\n}\n</style>\n"]}]}